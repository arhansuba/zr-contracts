{
	"id": "4f48d7ab77a63d81f5b63b176b21aee1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/interfaces/IWalletManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title IWalletManager\n * @dev Interface for managing wallets in a decentralized system.\n */\ninterface IWalletManager {\n    \n    /**\n     * @notice Emitted when a new wallet is created.\n     * @param walletAddress Address of the newly created wallet.\n     * @param owner Address of the wallet owner.\n     */\n    event WalletCreated(address indexed walletAddress, address indexed owner);\n\n    /**\n     * @notice Emitted when a wallet is updated.\n     * @param walletAddress Address of the updated wallet.\n     * @param newOwner Address of the new owner.\n     */\n    event WalletUpdated(address indexed walletAddress, address indexed newOwner);\n\n    /**\n     * @notice Creates a new wallet and assigns it to the specified owner.\n     * @param owner Address of the wallet owner.\n     * @return walletAddress Address of the newly created wallet.\n     */\n    function createWallet(address owner) external returns (address walletAddress);\n\n    /**\n     * @notice Updates the ownership of an existing wallet.\n     * @param walletAddress Address of the wallet to be updated.\n     * @param newOwner Address of the new owner.\n     */\n    function updateWalletOwnership(address walletAddress, address newOwner) external;\n\n    /**\n     * @notice Retrieves the owner of a specific wallet.\n     * @param walletAddress Address of the wallet.\n     * @return owner Address of the wallet owner.\n     */\n    function getWalletOwner(address walletAddress) external view returns (address owner);\n\n    /**\n     * @notice Checks if an address is a valid wallet.\n     * @param walletAddress Address to be checked.\n     * @return isValid True if the address is a valid wallet, false otherwise.\n     */\n    function isValidWallet(address walletAddress) external view returns (bool isValid);\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IWalletManager.sol": {
				"IWalletManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "WalletCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "WalletUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "createWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "getWalletOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "isValidWallet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "updateWalletOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for managing wallets in a decentralized system.",
						"events": {
							"WalletCreated(address,address)": {
								"params": {
									"owner": "Address of the wallet owner.",
									"walletAddress": "Address of the newly created wallet."
								}
							},
							"WalletUpdated(address,address)": {
								"params": {
									"newOwner": "Address of the new owner.",
									"walletAddress": "Address of the updated wallet."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createWallet(address)": {
								"params": {
									"owner": "Address of the wallet owner."
								},
								"returns": {
									"walletAddress": "Address of the newly created wallet."
								}
							},
							"getWalletOwner(address)": {
								"params": {
									"walletAddress": "Address of the wallet."
								},
								"returns": {
									"owner": "Address of the wallet owner."
								}
							},
							"isValidWallet(address)": {
								"params": {
									"walletAddress": "Address to be checked."
								},
								"returns": {
									"isValid": "True if the address is a valid wallet, false otherwise."
								}
							},
							"updateWalletOwnership(address,address)": {
								"params": {
									"newOwner": "Address of the new owner.",
									"walletAddress": "Address of the wallet to be updated."
								}
							}
						},
						"title": "IWalletManager",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createWallet(address)": "b054a9e8",
							"getWalletOwner(address)": "966708a5",
							"isValidWallet(address)": "439a3012",
							"updateWalletOwnership(address,address)": "dbeb71c1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"WalletCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getWalletOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"isValidWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateWalletOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for managing wallets in a decentralized system.\",\"events\":{\"WalletCreated(address,address)\":{\"params\":{\"owner\":\"Address of the wallet owner.\",\"walletAddress\":\"Address of the newly created wallet.\"}},\"WalletUpdated(address,address)\":{\"params\":{\"newOwner\":\"Address of the new owner.\",\"walletAddress\":\"Address of the updated wallet.\"}}},\"kind\":\"dev\",\"methods\":{\"createWallet(address)\":{\"params\":{\"owner\":\"Address of the wallet owner.\"},\"returns\":{\"walletAddress\":\"Address of the newly created wallet.\"}},\"getWalletOwner(address)\":{\"params\":{\"walletAddress\":\"Address of the wallet.\"},\"returns\":{\"owner\":\"Address of the wallet owner.\"}},\"isValidWallet(address)\":{\"params\":{\"walletAddress\":\"Address to be checked.\"},\"returns\":{\"isValid\":\"True if the address is a valid wallet, false otherwise.\"}},\"updateWalletOwnership(address,address)\":{\"params\":{\"newOwner\":\"Address of the new owner.\",\"walletAddress\":\"Address of the wallet to be updated.\"}}},\"title\":\"IWalletManager\",\"version\":1},\"userdoc\":{\"events\":{\"WalletCreated(address,address)\":{\"notice\":\"Emitted when a new wallet is created.\"},\"WalletUpdated(address,address)\":{\"notice\":\"Emitted when a wallet is updated.\"}},\"kind\":\"user\",\"methods\":{\"createWallet(address)\":{\"notice\":\"Creates a new wallet and assigns it to the specified owner.\"},\"getWalletOwner(address)\":{\"notice\":\"Retrieves the owner of a specific wallet.\"},\"isValidWallet(address)\":{\"notice\":\"Checks if an address is a valid wallet.\"},\"updateWalletOwnership(address,address)\":{\"notice\":\"Updates the ownership of an existing wallet.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWalletManager.sol\":\"IWalletManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWalletManager.sol\":{\"keccak256\":\"0xc4214786cf43e75d353f73e1445fb5575102fd9495a64bfff74d1a27b648292c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ffbe2ae6b4b0e15fa4b6fd7831dfb5b8e3c808d271143c299b907f3bc77ba9b\",\"dweb:/ipfs/QmVmGS5p3LKCjLyng1Nmd9YyxL1rzdaFgRy3WAJbcHYUhG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"WalletCreated(address,address)": {
								"notice": "Emitted when a new wallet is created."
							},
							"WalletUpdated(address,address)": {
								"notice": "Emitted when a wallet is updated."
							}
						},
						"kind": "user",
						"methods": {
							"createWallet(address)": {
								"notice": "Creates a new wallet and assigns it to the specified owner."
							},
							"getWalletOwner(address)": {
								"notice": "Retrieves the owner of a specific wallet."
							},
							"isValidWallet(address)": {
								"notice": "Checks if an address is a valid wallet."
							},
							"updateWalletOwnership(address,address)": {
								"notice": "Updates the ownership of an existing wallet."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IWalletManager.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IWalletManager.sol",
					"exportedSymbols": {
						"IWalletManager": [
							49
						]
					},
					"id": 50,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWalletManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:98:0",
								"text": " @title IWalletManager\n @dev Interface for managing wallets in a decentralized system."
							},
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "IWalletManager",
							"nameLocation": "167:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "193:178:0",
										"text": " @notice Emitted when a new wallet is created.\n @param walletAddress Address of the newly created wallet.\n @param owner Address of the wallet owner."
									},
									"eventSelector": "5b03bfed1c14a02bdeceb5fa582eb1a5765fc0bc64ca0e6af4c20afc9487f081",
									"id": 9,
									"name": "WalletCreated",
									"nameLocation": "382:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "412:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "396:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "443:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "427:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:54:0"
									},
									"src": "376:74:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "456:168:0",
										"text": " @notice Emitted when a wallet is updated.\n @param walletAddress Address of the updated wallet.\n @param newOwner Address of the new owner."
									},
									"eventSelector": "0f37c6733428a3a65d46b7f1853a5ce4bfa3cf92d25322507a50bf23a0b5a0a8",
									"id": 16,
									"name": "WalletUpdated",
									"nameLocation": "635:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "665:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "649:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "696:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "680:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:57:0"
									},
									"src": "629:77:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "712:201:0",
										"text": " @notice Creates a new wallet and assigns it to the specified owner.\n @param owner Address of the wallet owner.\n @return walletAddress Address of the newly created wallet."
									},
									"functionSelector": "b054a9e8",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createWallet",
									"nameLocation": "927:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "948:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:15:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "981:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "973:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:23:0"
									},
									"scope": 49,
									"src": "918:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1002:185:0",
										"text": " @notice Updates the ownership of an existing wallet.\n @param walletAddress Address of the wallet to be updated.\n @param newOwner Address of the new owner."
									},
									"functionSelector": "dbeb71c1",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateWalletOwnership",
									"nameLocation": "1201:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1231:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1223:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1254:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1246:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:41:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:0"
									},
									"scope": 49,
									"src": "1192:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1279:169:0",
										"text": " @notice Retrieves the owner of a specific wallet.\n @param walletAddress Address of the wallet.\n @return owner Address of the wallet owner."
									},
									"functionSelector": "966708a5",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getWalletOwner",
									"nameLocation": "1462:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1485:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1477:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1476:23:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1531:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1523:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1522:15:0"
									},
									"scope": 49,
									"src": "1453:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1544:196:0",
										"text": " @notice Checks if an address is a valid wallet.\n @param walletAddress Address to be checked.\n @return isValid True if the address is a valid wallet, false otherwise."
									},
									"functionSelector": "439a3012",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidWallet",
									"nameLocation": "1754:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1776:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1768:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1767:23:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "1819:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:14:0"
									},
									"scope": 49,
									"src": "1745:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "157:1673:0",
							"usedErrors": [],
							"usedEvents": [
								9,
								16
							]
						}
					],
					"src": "32:1800:0"
				},
				"id": 0
			}
		}
	}
}